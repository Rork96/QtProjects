CREATE ROLE "Users" NOSUPERUSER NOCREATEDB NOCREATEROLE NOCREATEUSER NOREPLICATION INHERIT LOGIN;
CREATE ROLE "Readers" NOSUPERUSER NOCREATEDB NOCREATEROLE NOCREATEUSER NOREPLICATION INHERIT LOGIN;
CREATE ROLE "Editors" NOSUPERUSER NOCREATEDB NOCREATEROLE NOCREATEUSER NOREPLICATION INHERIT LOGIN;

CREATE ROLE user WITH PASSWORD 'Password';
CREATE ROLE reader WITH PASSWORD 'Password';
CREATE ROLE editor WITH PASSWORD 'Password';

GRANT "Users" TO user;
GRANT "Readers" TO reader;
GRANT "Editors" TO editor;

GRANT SELECT, INSERT, UPDATE, DELETE ON main_table, equipment_table, worker_table to "user"

GRANT INSERT ON main_table TO "editor"
GRANT SELECT ON equipment_table, worker_table TO "editor"

GRANT SELECT ON main_table, equipment_table, worker_table to "reader"

ALTER TABLE main_table, equipment_table, worker_tabl DISABLE ROW LEVEL SECURITY

GRANT USAGE ON SEQUENCE main_table_id_seq TO user
GRANT USAGE ON SEQUENCE main_table_id_seq TO editor

CREATE OR REPLACE FUNCTION setEditor()
  RETURNS TRIGGER AS
  $func$
  BEGIN
    NEW.edit_date := current_date;
    RETURN NEW;
  end;
$func$ LANGUAGE plpgsql;


CREATE TRIGGER set_editor
BEFORE UPDATE ON main_table
FOR ROW EXECUTE PROCEDURE setEditor();